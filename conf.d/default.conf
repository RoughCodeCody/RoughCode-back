upstream frontend {
    server frontend:3000;
}

server {
    listen 80;
    server_name rough-code.com www.rough-code.com;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/certbot;
    } 



    location / {     
        return 301 https://$host$request_uri;   
        # proxy_pass http://frontend;
        # root /usr/share/nginx/html; # 실행할 파일들의 루트 위치 '/' 쓰는 거 중요하다. 
        # index index.html index.htm; # index.html을 지정
        # try_files $uri $uri/ /index.html; # 파일 찾을 때 명시된 순서로 찾으며, 가장 먼저 발견되는 파일을 사용

    }

    # location /sockjs-node {
    #     proxy_pass http://frontend;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }

}

# https url
server {
  listen 443 ssl;
  server_name rough-code.com www.rough-code.com;

	#키 받기
  ssl_certificate /etc/letsencrypt/live/rough-code.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/rough-code.com/privkey.pem;
	
	# 정적파일은 이런 방식으로 연결할 수 있다.
  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

	# 실행되는 서버는 아래와 같은 방식으로 연결해줘야한다.
  # location /api {
  #   proxy_pass http://app:8000; # 백엔드 서버 컨테이너의 포트 번호에 맞게 수정하세요.
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  # }
}