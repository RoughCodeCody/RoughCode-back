plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.sonarqube' version '4.0.0.2929'
    // id 'jacoco'
}

group = 'com.cody'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'com.google.code.gson:gson:2.9.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation('com.auth0:java-jwt:4.2.1')
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation 'org.hibernate:hibernate-validator:6.2.5.Final'
    testImplementation 'org.glassfish:jakarta.el'

    // mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // web risk
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.16.0'
    implementation 'com.google.cloud:google-cloud-webrisk:2.14.0'

    // spring batch
    implementation("org.springframework.boot:spring-boot-starter-batch")
    implementation("org.springframework.boot:spring-boot-starter-quartz")
    testImplementation 'org.springframework.batch:spring-batch-test'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
    useJUnitPlatform()
}


// sonarqube {
//     properties {
//         property "sonar.projectKey", "sonar"
//         property "sonar.projectName", "sonar"
//         property 'sonar.host.url', 'http://k8a306.p.ssafy.io:8000/'
//         property 'sonar.login', 'squ_befdf245a27681f3b88ede9e061123599de353bf'

//         property 'sonar.sources', 'src'

//         // property "sonar.java.binaries", "${buildDir}/classes"
//         // property "sonar.sourceEncoding", "UTF-8"
//         // property "sonar.sources", "src/main/java"
//         // property "sonar.exclusions", "**/util/**, **/support/**, **/dto/**"

//         // property "sonar.tests", "src/test/java"
//         // property "sonar.test.inclusions", "**/*Test.java"
//         // property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
//     }
// }

// subprojects {
//     apply plugin: 'org.sonarqube'

//     sonarqube {
//         properties {
//             property 'sonar.projectKey', 'sonar'
//             property 'sonar.projectName', 'sonar'
//             property 'sonar.host.url', 'http://k8a306.p.ssafy.io:8000/'
//             property 'sonar.login', 'squ_befdf245a27681f3b88ede9e061123599de353bf'
//             property 'sonar.sources', 'src'
//             property 'sonar.language', 'java'
//             property 'sonar.projectVersion', '1.1.0-SNAPSHOT'
//             property 'sonar.sourceEncoding', 'UTF-8'
//             property 'sonar.coverage.jacoco.xmlReportPaths', '${buildDir}/reports/jacoco/test/jacocoTestReport.xml'
//             property 'sonar.java.binaries', '${buildDir}/classes'
//             property 'sonar.test.inclusions', '**/*Test.java'
//             property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
//         }
//     }
// }

sonar {
  properties {
    property "sonar.projectKey", "sonar"
    property "sonar.projectName", "sonar"
  }
}


// jacoco {
//   // JaCoCo 버전
//   toolVersion = '0.8.5'

// //  테스트결과 리포트를 저장할 경로 변경
// //  default는 "$/jacoco"
// //  reportsDir = file("$buildDir/customJacocoReportDir")
// }