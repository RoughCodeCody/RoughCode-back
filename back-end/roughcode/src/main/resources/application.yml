spring:
  data:
    mongodb:
      host: ${HOST}
      port: 27017
      username: ${MONGODB_USER}
      password: ${MONGODB_PASSWORD}
      database: ${MONGODB_DATABASE}
      authentication-database: admin
  jpa:
    hibernate:
      ddl-auto: update
      generate-ddl: false
      show-sql: true
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${HOST}:3306/roughcode
    username: ${MARIADB_USER}
    password: ${MARIADB_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            redirect-uri: http://${HOST}:8080/api/v1/oauth2/callback/github
  redis:
    host: ${HOST}
    port: 6379
    password: ${REDIS_PASSWORD}

cloud:
  aws:
    s3:
      bucket: roughcode
    region:
      static: ap-northeast-2 #Asia Pacific -> seoul
    stack:
      auto: false
    credentials:
      access-key: ${S3_ACCESSKEY}
      secret-key: ${S3_SECRETKEY}

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error

jwt:
  secret: ${JWT_SECRET}

app:
  oauth2:
    authorizedRedirectUri:
      http://localhost:3000,
      http://localhost:80,
      http://${HOST}:3000,
      http://${HOST}:80,
      https://${HOST}:3000,
      https://${HOST}:80

filepath:
  stat-card: statcard.txt
  google-credentials: google-credentials.json

---
#spring boot batch + scheduler
spring:
  batch:
    job:
      enabled: false			# 시작과 동시에 실행되는건 방지
    jdbc:
      initialize-schema: always # batch 스키마 자동 생성

---
# Mail Sending
spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true